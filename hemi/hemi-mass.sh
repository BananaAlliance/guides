#!/bin/bash

# –¶–≤–µ—Ç–∞ –∏ —ç–º–æ–¥–∑–∏ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

CHECKMARK="‚úÖ"
ERROR="‚ùå"
PROGRESS="üîÑ"
INSTALL="üì¶"
SUCCESS="üéâ"
NODE="üñ•Ô∏è"
INFO="‚ÑπÔ∏è"
ADDRESS="üí∞"

SCRIPT_VERSION="1.1.2"
# –í–µ—Ä—Å–∏—è –Ω–æ–¥—ã Hemi
LATEST_NODE_VERSION="0.4.5"
NODE_DOWNLOAD_URL="https://github.com/hemilabs/heminetwork/releases/download/v${LATEST_NODE_VERSION}/heminetwork_v${LATEST_NODE_VERSION}_linux_amd64.tar.gz"

# –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ (—Ñ–æ—Ä–º–∞—Ç: IP:USERNAME:PASSWORD)
SERVERS_FILE="servers.conf"

# –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤
ALL_ADDRESSES=()

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
log() {
    echo -e "$1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
show_header() {
    clear
    echo -e "${PURPLE}======================================${NC}"
    echo -e "${CYAN}       –ú–∞—Å—Ç–µ—Ä –º–∞—Å—Å–æ–≤–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Hemi${NC}"
    echo -e "${PURPLE}======================================${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫
check_error() {
    if [ $? -ne 0 ]; then
        echo -e "${ERROR} ${RED}–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏.${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
install_packages() {
    echo -e "${NODE} ${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
    sudo apt update && sudo apt install -y curl tar wget
    check_error
    echo -e "${CHECKMARK} ${GREEN}–ü–∞–∫–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Hemi
install_hemi() {
    echo -e "${NODE} ${GREEN}–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Hemi v${LATEST_NODE_VERSION}...${NC}"
    
    wget $NODE_DOWNLOAD_URL -O heminetwork_v${LATEST_NODE_VERSION}_linux_amd64.tar.gz
    check_error
    
    tar -xvf heminetwork_v${LATEST_NODE_VERSION}_linux_amd64.tar.gz
    check_error
    
    rm heminetwork_v${LATEST_NODE_VERSION}_linux_amd64.tar.gz
    check_error

    mv heminetwork_v${LATEST_NODE_VERSION}_linux_amd64 $HOME/heminetwork
    check_error

    echo "${LATEST_NODE_VERSION}" > $HOME/heminetwork/version.txt
    check_error

    echo -e "${CHECKMARK} ${GREEN}Hemi v${LATEST_NODE_VERSION} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –≤—ã–≤–æ–¥–∞ –±–∏—Ç–∫–æ–∏–Ω-–∞–¥—Ä–µ—Å–æ–≤
generate_and_show_addresses() {
    echo -e "${INFO} ${CYAN}–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Bitcoin –∞–¥—Ä–µ—Å–æ–≤...${NC}"
    cd $HOME/heminetwork
    ./keygen -secp256k1 -json -net="testnet" > ~/popm-address.json
    check_error

    # –ü–æ–ª—É—á–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
    local ADDRESS=$(cat ~/popm-address.json | grep "pubkey_hash" | awk -F '"' '{print $4}')
    echo -e "${ADDRESS} ${GREEN}–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Bitcoin-–∞–¥—Ä–µ—Å: $ADDRESS${NC}"

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–¥—Ä–µ—Å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    echo "$ADDRESS"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
create_service_file() {
    echo -e "${INSTALL} ${GREEN}–°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è Hemi...${NC}"

    PRIVATE_KEY=$(cat $HOME/popm-address.json | grep "private_key" | awk -F '"' '{print $4}')
    check_error

    sudo bash -c "cat << EOF > /etc/systemd/system/hemi.service
[Unit]
Description=Hemi Node
After=network.target

[Service]
User=$(whoami)
Environment=POPM_BTC_PRIVKEY=$PRIVATE_KEY
Environment=POPM_STATIC_FEE=50
Environment=POPM_BFG_URL=wss://testnet.rpc.hemi.network/v1/ws/public
ExecStart=$HOME/heminetwork/popmd
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF"
    check_error

    sudo systemctl daemon-reload
    sudo systemctl enable hemi
    sudo systemctl start hemi
    check_error

    echo -e "${SUCCESS} ${GREEN}–°–µ—Ä–≤–∏—Å Hemi —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–¥—ã
remove_hemi() {
    echo -e "${ERROR} ${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ Hemi –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...${NC}"
    
    sudo systemctl stop hemi
    sudo systemctl disable hemi
    sudo rm /etc/systemd/system/hemi.service
    sudo systemctl daemon-reload
    rm -rf $HOME/heminetwork
    check_error

    echo -e "${SUCCESS} ${GREEN}Hemi —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–¥—ã
update_hemi() {
    echo -e "${PROGRESS} ${YELLOW}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Hemi –¥–æ –≤–µ—Ä—Å–∏–∏ v${LATEST_NODE_VERSION}...${NC}"
    
    wget $NODE_DOWNLOAD_URL -O heminetwork_v${LATEST_NODE_VERSION}_linux_amd64.tar.gz
    check_error
    
    tar -xvf heminetwork_v${LATEST_NODE_VERSION}_linux_amd64.tar.gz
    check_error

    rm heminetwork_v${LATEST_NODE_VERSION}_linux_amd64.tar.gz
    check_error

    rm -rf $HOME/heminetwork
    mv heminetwork_v${LATEST_NODE_VERSION}_linux_amd64 $HOME/heminetwork
    check_error

    echo "${LATEST_NODE_VERSION}" > $HOME/heminetwork/version.txt
    check_error

    sudo systemctl restart hemi
    check_error

    echo -e "${SUCCESS} ${GREEN}Hemi —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ –≤–µ—Ä—Å–∏–∏ ${LATEST_NODE_VERSION}.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
show_progress() {
    local duration=$1
    local steps=$2
    local step_duration=$(echo "scale=2; $duration / $steps" | bc)
    local progress=0
    while [ $progress -lt $steps ]
    do
        echo -ne "\r–ü—Ä–æ–≥—Ä–µ—Å—Å: [${GREEN}"
        for ((i=0; i<$progress; i++)); do echo -ne "#"; done
        for ((i=$progress; i<$steps; i++)); do echo -ne "."; done
        echo -ne "${NC}] $((progress * 100 / steps))%"
        sleep $step_duration
        ((progress++))
    done
    echo -ne "\r–ü—Ä–æ–≥—Ä–µ—Å—Å: [${GREEN}";for ((i=0; i<$steps; i++)); do echo -ne "#"; done; echo -e "${NC}] 100%"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ –≤—Å–µ —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ —Ñ–∞–π–ª–∞
mass_action() {
    action=$1
    total_servers=$(grep -v '^#' "$SERVERS_FILE" | grep -v '^$' | wc -l)
    current_server=0

    while IFS=':' read -r IP USER PASSWORD; do
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        [[ -z "$IP" || "$IP" == \#* ]] && continue

        ((current_server++))
        log "${NODE} ${BLUE}–ù–∞—á–∏–Ω–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: $IP (${current_server}/${total_servers})${NC}"
        
        if [ "$action" == "install" ]; then
            echo "–®–∞–≥ 1/4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
            show_progress 2 10
            echo "–®–∞–≥ 2/4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Hemi"
            show_progress 3 10
            echo "–®–∞–≥ 3/4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Bitcoin-–∞–¥—Ä–µ—Å–∞"
            show_progress 1 10
            echo "–®–∞–≥ 4/4: –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"
            show_progress 2 10
        elif [ "$action" == "remove" ]; then
            echo "–£–¥–∞–ª–µ–Ω–∏–µ Hemi"
            show_progress 5 10
        elif [ "$action" == "update" ]; then
            echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Hemi"
            show_progress 5 10
        fi

        ADDR=$(sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 "$USER@$IP" bash <<EOF
            LATEST_NODE_VERSION="$LATEST_NODE_VERSION"
            NODE_DOWNLOAD_URL="https://github.com/hemilabs/heminetwork/releases/download/v\${LATEST_NODE_VERSION}/heminetwork_v\${LATEST_NODE_VERSION}_linux_amd64.tar.gz"
            
            $(declare -f install_packages install_hemi generate_and_show_addresses create_service_file remove_hemi update_hemi check_error)
            
            if [ "$action" == "install" ]; then
                install_packages >/dev/null 2>&1
                install_hemi >/dev/null 2>&1
                ADDRESS=\$(generate_and_show_addresses | grep "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Bitcoin-–∞–¥—Ä–µ—Å:" | awk '{print \$NF}')
                create_service_file >/dev/null 2>&1
                echo "\$ADDRESS"
            elif [ "$action" == "remove" ]; then
                remove_hemi >/dev/null 2>&1
            elif [ "$action" == "update" ]; then
                update_hemi >/dev/null 2>&1
            fi
EOF
)
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –≤ –º–∞—Å—Å–∏–≤, –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        if [ "$action" == "install" ]; then
            ALL_ADDRESSES+=("$ADDR")
        fi

        log "${CHECKMARK} ${GREEN}–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: $IP${NC}"
        echo ""
    done < "$SERVERS_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤
show_all_addresses() {
    echo -e "${ADDRESS} ${CYAN}–í—Å–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Bitcoin-–∞–¥—Ä–µ—Å–∞:${NC}"
    for addr in "${ALL_ADDRESSES[@]}"; do
        echo "$addr"
    done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if [ "$1" == "install" ]; then
    show_header
    mass_action "install"
    show_all_addresses
elif [ "$1" == "remove" ]; then
    show_header
    mass_action "remove"
elif [ "$1" == "update" ]; then
    show_header
    mass_action "update"
else
    echo -e "${ERROR} ${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: install, remove –∏–ª–∏ update.${NC}"
    exit 1
fi




