#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
COLOR_RESET="\e[0m"
COLOR_GREEN="\e[32m"
COLOR_YELLOW="\e[33m"
COLOR_RED="\e[31m"
COLOR_BLUE="\e[34m"

LOG_DIR="./logs"
ERROR_LOG="failed_servers.log"
SERVERS_FILE="servers.conf"
mkdir -p "$LOG_DIR"
echo "" > "$ERROR_LOG"  # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª –æ—à–∏–±–æ–∫

MAX_ATTEMPTS=3
PARALLEL_JOBS=5  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫

SCRIPT_VERSION=1.0.1

self_update() {
    # URL —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ GitHub
    REPO_URL="https://github.com/BananaAlliance/guides/raw/main/elixir/elixir-mass.sh"

    # –ü–æ–ª—É—á–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∫—Ä–∏–ø—Ç–∞
    REMOTE_VERSION=$(curl -s $REPO_URL | grep "SCRIPT_VERSION=" | cut -d '"' -f 2)

    if [ "$SCRIPT_VERSION" != "$REMOTE_VERSION" ]; then
        log "${COLOR_YELLOW}‚ö†Ô∏è –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ ($REMOTE_VERSION). –û–±–Ω–æ–≤–ª—è–µ–º...${COLOR_RESET}"

        # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        TEMP_SCRIPT=$(mktemp)
        wget -O "$TEMP_SCRIPT" "$REPO_URL" || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ."

        # –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ –Ω–æ–≤—ã–π
        mv "$TEMP_SCRIPT" "$0" || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç."
        chmod +x "$0"

        log "${COLOR_GREEN}‚úîÔ∏è –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ $REMOTE_VERSION.${COLOR_RESET}"

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        exec "$0" "$@"
    else
        log "${COLOR_GREEN}‚úîÔ∏è –£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ (${SCRIPT_VERSION}).${COLOR_RESET}"
    fi
}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo -e "$1"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
handle_error() {
    local ATTEMPT=$1
    log "${COLOR_RED}‚ùå $2 (–ø–æ–ø—ã—Ç–∫–∞ $ATTEMPT –∏–∑ $MAX_ATTEMPTS)${COLOR_RESET}"
    local DELAY=$((2**$ATTEMPT)) # –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    log "${COLOR_YELLOW}üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ $DELAY —Å–µ–∫—É–Ω–¥...${COLOR_RESET}"
    sleep $DELAY
}

self_update

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞
check_and_install_package() {
    if ! dpkg -l | grep -qw "$1"; then
        log "${COLOR_YELLOW}üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $1...${COLOR_RESET}"
        sudo apt-get install -y "$1" || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $1."
    else
        log "${COLOR_GREEN}‚úîÔ∏è  $1 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${COLOR_RESET}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
check_and_install_docker() {
    if ! command -v docker &> /dev/null; then
        log "${COLOR_YELLOW}üê≥ Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${COLOR_RESET}"
        sudo install -m 0755 -d /etc/apt/keyrings || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é /etc/apt/keyrings."
        wget -O- https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor | sudo tee /etc/apt/keyrings/docker.gpg > /dev/null || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–ª—é—á Docker GPG."
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker."
        sudo apt-get update -y || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤."
        check_and_install_package "docker-ce"
    else
        log "${COLOR_GREEN}‚úîÔ∏è  Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${COLOR_RESET}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏
if [ ! -f "$SERVERS_FILE" ]; then
    log "${COLOR_RED}‚ùå –§–∞–π–ª $SERVERS_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏ —É–∫–∞–∂–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤.${COLOR_RESET}"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
install_node_on_server() {
    local IP=$1
    local USER=$2
    local PASSWORD=$3
    local NODE_NAME=$4
    local METAMASK_ADDRESS=$5
    local PRIVATE_KEY=$6

    LOG_FILE="$LOG_DIR/$IP.log"

    log "${COLOR_BLUE}üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $IP...${COLOR_RESET}"

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –ø–æ SSH –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –≤—ã–≤–æ–¥ –≤ –ª–æ–≥
    sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 "$USER@$IP" <<EOF &> "$LOG_FILE"
        echo "üåê –ü–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ —Å–µ—Ä–≤–µ—Ä—É $IP..."

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
        $(typeset -f check_and_install_package)
        $(typeset -f check_and_install_docker)

        check_and_install_docker
        check_and_install_package curl

        ENV_DIR="\$HOME/.elixir"
        ENV_FILE="\$ENV_DIR/.env"
        mkdir -p "\$ENV_DIR"

        echo "ENV=testnet-3
STRATEGY_EXECUTOR_DISPLAY_NAME=$NODE_NAME
STRATEGY_EXECUTOR_BENEFICIARY=$METAMASK_ADDRESS
SIGNER_PRIVATE_KEY=$(echo "$PRIVATE_KEY" | sed 's/^0x//')
STRATEGY_EXECUTOR_IP_ADDRESS=\$(curl -4 -s ifconfig.me)" > "\$ENV_FILE"

        docker pull elixirprotocol/validator:v3
        docker run -d --env-file "\$ENV_FILE" --name elixir --restart unless-stopped elixirprotocol/validator:v3

        echo "‚úîÔ∏è –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ $IP!"
EOF
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö
install_on_all_servers() {
    while IFS=':' read -r IP USER PASSWORD NODE_NAME METAMASK_ADDRESS PRIVATE_KEY; do
        ATTEMPTS=0
        while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
            install_node_on_server "$IP" "$USER" "$PASSWORD" "$NODE_NAME" "$METAMASK_ADDRESS" "$PRIVATE_KEY" && break
            ATTEMPTS=$((ATTEMPTS + 1))
            handle_error $ATTEMPTS "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $IP"
        done

        if [ $ATTEMPTS -eq $MAX_ATTEMPTS ]; then
            log "${COLOR_RED}‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $IP –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å –ø–æ—Å–ª–µ $MAX_ATTEMPTS –ø–æ–ø—ã—Ç–æ–∫.${COLOR_RESET}"
            echo "$IP:$USER:$PASSWORD:$NODE_NAME:$METAMASK_ADDRESS:$PRIVATE_KEY" >> "$ERROR_LOG"  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –ª–æ–≥ –æ—à–∏–±–æ–∫
        fi
    done < "$SERVERS_FILE"
}

# –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö —Å –æ—à–∏–±–∫–∞–º–∏
retry_failed_servers() {
    if [ ! -s "$ERROR_LOG" ]; then
        log "${COLOR_GREEN}‚úîÔ∏è –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ. –ü–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.${COLOR_RESET}"
    else
        log "${COLOR_YELLOW}üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–∑ $ERROR_LOG...${COLOR_RESET}"
        SERVERS_FILE="$ERROR_LOG"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª –æ—à–∏–±–æ–∫ –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        echo "" > "$ERROR_LOG"  # –û—á–∏—â–∞–µ–º –ª–æ–≥ –æ—à–∏–±–æ–∫ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π
        install_on_all_servers
    fi
}

# –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
install_in_parallel() {
    while IFS=':' read -r IP USER PASSWORD NODE_NAME METAMASK_ADDRESS PRIVATE_KEY; do
        ATTEMPTS=0
        {
            while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
                install_node_on_server "$IP" "$USER" "$PASSWORD" "$NODE_NAME" "$METAMASK_ADDRESS" "$PRIVATE_KEY" && break
                ATTEMPTS=$((ATTEMPTS + 1))
                handle_error $ATTEMPTS "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $IP"
            done

            if [ $ATTEMPTS -eq $MAX_ATTEMPTS ]; then
                log "${COLOR_RED}‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $IP –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å –ø–æ—Å–ª–µ $MAX_ATTEMPTS –ø–æ–ø—ã—Ç–æ–∫.${COLOR_RESET}"
                echo "$IP:$USER:$PASSWORD:$NODE_NAME:$METAMASK_ADDRESS:$PRIVATE_KEY" >> "$ERROR_LOG"  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –ª–æ–≥ –æ—à–∏–±–æ–∫
            fi
        } &
        
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        if (( $(jobs -r | wc -l) >= PARALLEL_JOBS )); then
            wait -n
        fi
    done < "$SERVERS_FILE"
    wait  # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–æ–Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
install_in_parallel
retry_failed_servers
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö!"