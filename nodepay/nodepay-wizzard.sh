#!/bin/bash

# –¶–≤–µ—Ç–∞ –∏ —ç–º–æ–¥–∑–∏
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

CHECKMARK="‚úÖ"
ERROR="‚ùå"
PROGRESS="üîÑ"
INSTALL="üì¶"
SUCCESS="üéâ"
WARNING="‚ö†Ô∏è"
NODE="üñ•Ô∏è"
INFO="‚ÑπÔ∏è"
LOGS="üìú"

SCRIPT_VERSION="1.0.3"
OCEAN_NODE_DIR="$HOME/ocean-node"
DOCKER_COMPOSE_FILE="$OCEAN_NODE_DIR/docker-compose.yml"
DOCKER_CONTAINER_NAME="ocean-node"

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
show_header() {
    clear
    echo -e "${PURPLE}======================================${NC}"
    echo -e "${CYAN}       Ocean Node Setup Wizard${NC}"
    echo -e "${PURPLE}======================================${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
show_separator() {
    echo -e "${BLUE}--------------------------------------${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
progress_bar() {
    echo -ne "${PROGRESS} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: ["
    for ((i=0; i<=25; i++)); do
        echo -ne "‚ñì"
        sleep 0.1
    done
    echo -e "]${NC} ${SUCCESS} –ì–æ—Ç–æ–≤–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_system_requirements() {
    local required_cpu=2  # –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ CPU —è–¥–µ—Ä
    local required_ram=4  # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏ (–≤ –ì–ë)
    local required_disk=20 # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ (–≤ –ì–ë)
    local node_name="Ocean Node"

    echo -e "${BLUE}${INFO} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –Ω–æ–¥—ã $node_name...${NC}"
    show_separator

    local cpu_cores=$(nproc)
    local total_ram=$(free -g | awk '/^Mem:/{print $2}')
    local free_disk=$(df -BG / | awk 'NR==2 {print $4}' | sed 's/G//')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ CPU
    if [ $cpu_cores -ge $required_cpu ]; then
        echo -e "${GREEN}${CHECKMARK} CPU: $cpu_cores —è–¥–µ—Ä (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_cpu)${NC}"
        cpu_status="OK"
    else
        echo -e "${RED}${ERROR} CPU: $cpu_cores —è–¥–µ—Ä (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_cpu)${NC}"
        cpu_status="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ RAM
    if [ $total_ram -ge $required_ram ]; then
        echo -e "${GREEN}${CHECKMARK} RAM: $total_ram –ì–ë (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_ram –ì–ë)${NC}"
        ram_status="OK"
    else
        echo -e "${RED}${ERROR} RAM: $total_ram –ì–ë (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_ram –ì–ë)${NC}"
        ram_status="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–∞
    if [ $free_disk -ge $required_disk ]; then
        echo -e "${GREEN}${CHECKMARK} –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ: $free_disk –ì–ë (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_disk –ì–ë)${NC}"
        disk_status="OK"
    else
        echo -e "${RED}${ERROR} –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ: $free_disk –ì–ë (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_disk –ì–ë)${NC}"
        disk_status="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
    fi

    show_separator

    # –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    if [[ $cpu_status == "OK" && $ram_status == "OK" && $disk_status == "OK" ]]; then
        echo -e "${GREEN}${CHECKMARK} –°—Ç–∞—Ç—É—Å: –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ${NC}"
        return 0
    else
        echo -e "${RED}${ERROR} –°—Ç–∞—Ç—É—Å: –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
check_installed() {
    local PACKAGE=$1
    if dpkg -l | grep -q "$PACKAGE"; then
        echo -e "${CHECKMARK} ${GREEN}$PACKAGE —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    else
        echo -e "${INSTALL} ${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $PACKAGE...${NC}"
        sudo apt install -y $PACKAGE
        check_error
        echo -e "${CHECKMARK} ${GREEN}$PACKAGE —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    fi
}

install_packages() {
    show_header
    echo -e "${NODE} ${GREEN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...${NC}"
    show_separator
    sudo apt update && sudo apt upgrade -y
    check_error

    progress_bar

    check_installed "curl"
    check_installed "screen"
    check_installed "htop"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        echo -e "${PROGRESS} Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
        sudo apt update
        sudo apt install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker
        echo -e "${CHECKMARK} Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    else
        echo -e "${CHECKMARK} Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Ocean Node
is_node_installed() {
    if [ -d "$OCEAN_NODE_DIR" ] && [ -f "$DOCKER_COMPOSE_FILE" ];then
        return 0
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–ø—É—â–µ–Ω –ª–∏ Ocean Node
is_node_running() {
    if docker ps | grep -q "$DOCKER_CONTAINER_NAME"; then
        return 0
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ Ocean Node
show_node_status() {
    if is_node_installed; then
        if is_node_running; then
            echo -e "${CHECKMARK} ${GREEN}Ocean Node —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω.${NC}"
        else
            echo -e "${WARNING} ${YELLOW}Ocean Node —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω.${NC}"
        fi
    else
        echo -e "${ERROR} ${RED}Ocean Node –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Ocean Node
install_ocean_node() {
    show_header
    check_docker

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    if ! check_system_requirements; then
        echo -e "${ERROR} ${RED}–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.${NC}"
        return
    fi

    install_packages

    # –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if [ ! -d "$OCEAN_NODE_DIR" ]; then
        echo -e "${PROGRESS} –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Ocean Node..."
        git clone https://github.com/oceanprotocol/ocean-node.git "$OCEAN_NODE_DIR"
        echo -e "${CHECKMARK} –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω."
    else
        echo -e "${INFO} –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ."
    fi

    # –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ docker-compose.yml
    echo -e "${PROGRESS} –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Docker —Ñ–∞–π–ª–∞..."
    cd "$OCEAN_NODE_DIR"
    bash scripts/ocean-node-quickstart.sh
    echo -e "${CHECKMARK} Docker —Ñ–∞–π–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω."

    # –®–∞–≥ 3: –ü–æ–¥–Ω—è—Ç–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –ø–æ–º–æ—â—å—é Docker Compose
    echo -e "${PROGRESS} –ó–∞–ø—É—Å–∫ Ocean Node —á–µ—Ä–µ–∑ Docker Compose..."
    docker compose up -d
    echo -e "${CHECKMARK} Ocean Node –∑–∞–ø—É—â–µ–Ω."

    show_node_status
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Ocean Node
stop_ocean_node() {
    if is_node_running; then
        echo -e "${PROGRESS} –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Ocean Node..."
        docker compose -f "$DOCKER_COMPOSE_FILE" down
        echo -e "${SUCCESS} Ocean Node –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    else
        echo -e "${WARNING} Ocean Node —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ Ocean Node
view_logs() {
    if is_node_installed; then
        echo -e "${INFO} ${LOGS} –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Ocean Node..."
        docker logs -f "$DOCKER_CONTAINER_NAME"
    else
        echo -e "${ERROR} Ocean Node –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã."
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–∞–º–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
self_update() {
    # URL —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ GitHub
    REPO_URL="https://raw.githubusercontent.com/BananaAlliance/guides/main/nodepay/nodepay-wizzard.sh"

    # –ü–æ–ª—É—á–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∫—Ä–∏–ø—Ç–∞
    REMOTE_VERSION=$(curl -s $REPO_URL | grep -Eo 'SCRIPT_VERSION="[0-9]+\.[0-9]+\.[0-9]+"' | cut -d '"' -f 2)

    if [ -z "$REMOTE_VERSION" ]; then
        echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞.${NC}"
        return 1
    fi

    if [ "$SCRIPT_VERSION" != "$REMOTE_VERSION" ]; then
        echo -e "${WARNING} ${YELLOW}–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ ($REMOTE_VERSION). –û–±–Ω–æ–≤–ª—è–µ–º...${NC}"

        # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        TEMP_SCRIPT=$(mktemp)
        wget -O "$TEMP_SCRIPT" "$REPO_URL" || { echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.${NC}"; return 1; }

        # –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ –Ω–æ–≤—ã–π
        mv "$TEMP_SCRIPT" "$0" || { echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç.${NC}"; return 1; }
        chmod +x "$0"

        echo -e "${CHECKMARK} ${GREEN}–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ $REMOTE_VERSION.${NC}"

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        exec "$0" "$@"
    else
        echo -e "${CHECKMARK} ${GREEN}–£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ (${SCRIPT_VERSION}).${NC}"
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        show_header
        if is_node_installed; then
            show_node_status
        fi

        if ! is_node_installed; then
            echo -e "${CYAN}1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Ocean Node ${INSTALL}${NC}"
        else
            if is_node_running; then
                echo -e "${CYAN}2) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Ocean Node ${ERROR}${NC}"
                echo -e "${CYAN}3) –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ ${LOGS}${NC}"
            else
                echo -e "${CYAN}2) –ó–∞–ø—É—Å—Ç–∏—Ç—å Ocean Node ${CHECKMARK}${NC}"
                echo -e "${CYAN}3) –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ ${LOGS}${NC}"
            fi
        fi

        echo -e "${CYAN}4) –û–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç ${PROGRESS}${NC}"
        echo -e "${CYAN}0) –í—ã–π—Ç–∏${NC}"
        show_separator
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: " choice

        case $choice in
            1)
                if ! is_node_installed; then
                    install_ocean_node
                else
                    echo -e "${WARNING} Ocean Node —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
                fi
                ;;
            2)
                if is_node_running; then
                    stop_ocean_node
                else
                    docker compose -f "$DOCKER_COMPOSE_FILE" up -d
                    echo -e "${CHECKMARK} Ocean Node –∑–∞–ø—É—â–µ–Ω.${NC}"
                fi
                ;;
            3)
                view_logs
                ;;
            4)
                self_update
                ;;
            0)
                echo -e "${SUCCESS} –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.${NC}"
                exit 0
                ;;
            *)
                echo -e "${ERROR} –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
                ;;
        esac
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    done
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu