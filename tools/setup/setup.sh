#!/bin/bash

# –í–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞
SETUP_VERSION="1.0.0"

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
COLOR_RESET="\e[0m"
COLOR_GREEN="\e[32m"
COLOR_YELLOW="\e[33m"
COLOR_RED="\e[31m"
COLOR_BLUE="\e[34m"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo -e "$1"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
handle_error() {
    log "${COLOR_RED}‚ùå –û—à–∏–±–∫–∞: $1${COLOR_RESET}"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
system_update_upgrade() {
    log "${COLOR_BLUE}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É –∏ –ø–∞–∫–µ—Ç—ã...${COLOR_RESET}"
    sudo apt-get update -y || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã"
    sudo apt-get upgrade -y || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É"
    log "${COLOR_GREEN}‚úîÔ∏è –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –≤—Å–µ –ø–∞–∫–µ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã${COLOR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
install_packages() {
    PACKAGES_TO_INSTALL=("$@")
    log "${COLOR_YELLOW}üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã: ${PACKAGES_TO_INSTALL[*]}...${COLOR_RESET}"

    for package in "${PACKAGES_TO_INSTALL[@]}"; do
        if ! dpkg -l | grep -qw "$package"; then
            log "${COLOR_BLUE}üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $package...${COLOR_RESET}"
            sudo apt-get install -y "$package" || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $package"
            log "${COLOR_GREEN}‚úîÔ∏è $package —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ${COLOR_RESET}"
        else
            log "${COLOR_GREEN}‚úîÔ∏è $package —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${COLOR_RESET}"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
install_docker() {
    if ! command -v docker &> /dev/null; then
        log "${COLOR_YELLOW}üê≥ Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${COLOR_RESET}"
        sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
        sudo apt-get install -y ca-certificates curl gnupg lsb-release || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è Docker"
        
        sudo mkdir -p /etc/apt/keyrings || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–ª—é—á–µ–π"
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–ª—é—á–∏ Docker"
        
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker"
        
        sudo apt-get update -y || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤"
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker"
        
        log "${COLOR_GREEN}‚úîÔ∏è Docker —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${COLOR_RESET}"
    else
        log "${COLOR_GREEN}‚úîÔ∏è Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${COLOR_RESET}"
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º NVM
install_nodejs() {
    if ! command -v nvm &> /dev/null; then
        log "${COLOR_BLUE}üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NVM (Node Version Manager)...${COLOR_RESET}"
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å NVM"
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º nvm –≤ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
        export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å NVM"
        
        log "${COLOR_GREEN}‚úîÔ∏è NVM —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${COLOR_RESET}"
    else
        log "${COLOR_GREEN}‚úîÔ∏è NVM —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${COLOR_RESET}"
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –≤–µ—Ä—Å–∏–∏ 20 —á–µ—Ä–µ–∑ NVM
    if ! nvm ls 20 &> /dev/null; then
        log "${COLOR_BLUE}üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js –≤–µ—Ä—Å–∏–∏ 20 —á–µ—Ä–µ–∑ NVM...${COLOR_RESET}"
        nvm install 20 || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js –≤–µ—Ä—Å–∏–∏ 20"
        log "${COLOR_GREEN}‚úîÔ∏è Node.js –≤–µ—Ä—Å–∏–∏ 20 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!${COLOR_RESET}"
    else
        log "${COLOR_GREEN}‚úîÔ∏è Node.js –≤–µ—Ä—Å–∏–∏ 20 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${COLOR_RESET}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python
install_python() {
    if ! command -v python3 &> /dev/null; then
        log "${COLOR_BLUE}üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python...${COLOR_RESET}"
        sudo apt-get install -y python3 python3-pip || handle_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Python"
        log "${COLOR_GREEN}‚úîÔ∏è Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ${COLOR_RESET}"
    else
        log "${COLOR_GREEN}‚úîÔ∏è Python —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${COLOR_RESET}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
main() {
    UPDATE_SYSTEM=false
    INSTALL_DOCKER=false
    INSTALL_NODEJS=false
    INSTALL_PYTHON=false
    INSTALL_PACKAGES=()

    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–ª–∞–≥–æ–≤ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –Ω—É–∂–Ω—ã—Ö –æ–ø—Ü–∏–π
    while [[ "$#" -gt 0 ]]; do
        case $1 in
            --update) UPDATE_SYSTEM=true ;;
            --docker) INSTALL_DOCKER=true ;;
            --nodejs) INSTALL_NODEJS=true ;;
            --python) INSTALL_PYTHON=true ;;
            --packages) shift; INSTALL_PACKAGES=("$@") ;;
        esac
        shift
    done

    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã, –µ—Å–ª–∏ —Ñ–ª–∞–≥ —É–∫–∞–∑–∞–Ω
    if [ "$UPDATE_SYSTEM" = true ]; then
        system_update_upgrade
    fi

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker, –µ—Å–ª–∏ —Ñ–ª–∞–≥ —É–∫–∞–∑–∞–Ω
    if [ "$INSTALL_DOCKER" = true ]; then
        install_docker
    fi

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js —á–µ—Ä–µ–∑ NVM, –µ—Å–ª–∏ —Ñ–ª–∞–≥ —É–∫–∞–∑–∞–Ω
    if [ "$INSTALL_NODEJS" = true ]; then
        install_nodejs
    fi

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python, –µ—Å–ª–∏ —Ñ–ª–∞–≥ —É–∫–∞–∑–∞–Ω
    if [ "$INSTALL_PYTHON" = true ]; then
        install_python
    fi

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ "${#INSTALL_PACKAGES[@]}" -gt 0 ]; then
        install_packages "${INSTALL_PACKAGES[@]}"
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
main "$@"
