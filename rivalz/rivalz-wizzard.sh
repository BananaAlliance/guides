#!/bin/bash

# –¶–≤–µ—Ç–∞ –∏ —ç–º–æ–¥–∑–∏
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

CHECKMARK="‚úÖ"
ERROR="‚ùå"
PROGRESS="üîÑ"
INSTALL="üì¶"
SUCCESS="üéâ"
WARNING="‚ö†Ô∏è"
NODE="üñ•Ô∏è"
INFO="‚ÑπÔ∏è"
WALLET="üëõ"

SCRIPT_VERSION="1.0.2"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
show_header() {
    clear
    echo -e "${PURPLE}======================================${NC}"
    echo -e "${CYAN}       –ú–∞—Å—Ç–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Rivalz${NC}"
    echo -e "${PURPLE}======================================${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
show_separator() {
    echo -e "${BLUE}--------------------------------------${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –Ω–æ–¥–∞
is_node_installed() {
    if command -v rivalz &> /dev/null; then
        return 0
    else
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ –Ω–æ–¥–∞
is_node_running() {
    if systemctl is-active --quiet rivalz; then
        return 0
    else
        return 1
    fi
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã
view_logs() {
    show_header
    echo -e "${NODE} ${GREEN}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã...${NC}"
    show_separator
    sudo journalctl -u rivalz -f
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
progress_bar() {
    echo -ne "${PROGRESS} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ: ["
    for ((i=0; i<=25; i++)); do
        echo -ne "‚ñì"
        sleep 0.1
    done
    echo -e "]${NC} ${SUCCESS} –ì–æ—Ç–æ–≤–æ!"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
check_error() {
    if [ $? -ne 0 ]; then
        echo -e "${ERROR} ${RED}–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.${NC}"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
check_installed() {
    PACKAGE=$1
    if dpkg -l | grep -q "$PACKAGE"; then
        echo -e "${CHECKMARK} ${GREEN}$PACKAGE —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    else
        echo -e "${INSTALL} ${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $PACKAGE...${NC}"
        sudo apt install -y $PACKAGE
        check_error
        echo -e "${CHECKMARK} ${GREEN}$PACKAGE —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
install_packages() {
    show_header
    echo -e "${NODE} ${GREEN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...${NC}"
    show_separator
    sudo apt update && sudo apt upgrade -y
    check_error
    
    progress_bar

    check_installed "curl"
    check_installed "screen"
    check_installed "htop"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_system_requirements() {
    local required_cpu=$1
    local required_ram=$2  # –≤ –ì–ë
    local required_disk=$3 # –≤ –ì–ë
    local node_name=$4

    echo -e "${BLUE}${INFO} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –Ω–æ–¥—ã $node_name...${NC}"
    echo -e "${BLUE}---------------------------------------------------${NC}"

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
    local cpu_cores=$(nproc)
    local total_ram=$(free -g | awk '/^Mem:/{print $2}')
    local free_disk=$(df -BG / | awk 'NR==2 {print $4}' | sed 's/G//')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º CPU
    if [ $cpu_cores -ge $required_cpu ]; then
        echo -e "${GREEN}${CHECKMARK} CPU: $cpu_cores —è–¥–µ—Ä (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_cpu)${NC}"
        local cpu_status="OK"
    else
        echo -e "${RED}${ERROR} CPU: $cpu_cores —è–¥–µ—Ä (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_cpu)${NC}"
        local cpu_status="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º RAM
    if [ $total_ram -ge $required_ram ]; then
        echo -e "${GREEN}${CHECKMARK} RAM: $total_ram –ì–ë (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_ram –ì–ë)${NC}"
        local ram_status="OK"
    else
        echo -e "${RED}${ERROR} RAM: $total_ram –ì–ë (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_ram –ì–ë)${NC}"
        local ram_status="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Å–∫
    if [ $free_disk -ge $required_disk ]; then
        echo -e "${GREEN}${CHECKMARK} –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ: $free_disk –ì–ë (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_disk –ì–ë)${NC}"
        local disk_status="OK"
    else
        echo -e "${RED}${ERROR} –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ: $free_disk –ì–ë (—Ç—Ä–µ–±—É–µ—Ç—Å—è $required_disk –ì–ë)${NC}"
        local disk_status="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"
    fi

    echo -e "${BLUE}---------------------------------------------------${NC}"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if [[ $cpu_status == "OK" && $ram_status == "OK" && $disk_status == "OK" ]]; then
        echo -e "${GREEN}${CHECKMARK} –°—Ç–∞—Ç—É—Å: –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ${NC}"
        return 0
    elif [[ $cpu_status == "OK" && $ram_status == "OK" && $disk_status == "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ" ]]; then
        echo -e "${YELLOW}${WARNING} –°—Ç–∞—Ç—É—Å: –°–æ–≤–º–µ—Å—Ç–∏–º–æ, –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –æ–±—ä–µ–º –¥–∏—Å–∫–∞${NC}"
        return 1
    elif [[ $cpu_status == "OK" && $ram_status == "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ" ]]; then
        echo -e "${YELLOW}${WARNING} –°—Ç–∞—Ç—É—Å: –°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ RAM)${NC}"
        return 2
    else
        echo -e "${RED}${ERROR} –°—Ç–∞—Ç—É—Å: –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ${NC}"
        return 3
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Rivalz
install_rivalz() {
    show_header
    echo -e "${NODE} ${GREEN}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è Rivalz...${NC}"
    show_separator

    check_system_requirements 4 4 50 "Rivalz"
    compatibility_status=$?

    case $compatibility_status in
        0)
            echo -e "${GREEN}–°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º–∞. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É.${NC}"
            ;;
        1|2)
            echo -e "${YELLOW}–°–∏—Å—Ç–µ–º–∞ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/n)${NC}"
            read -r answer
            if [[ ! $answer =~ ^[Yy]$ ]]; then
                echo -e "${RED}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.${NC}"
                return
            fi
            ;;
        3)
            echo -e "${RED}–°–∏—Å—Ç–µ–º–∞ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.${NC}"
            return
            ;;
    esac

    echo -e "${NODE} ${GREEN}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Rivalz...${NC}"
    show_separator

    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
    check_error

    check_installed "nodejs"
    npm i -g rivalz-node-cli
    check_error
    echo -e "${SUCCESS} ${GREEN}Rivalz —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"

    show_separator
    echo -e "${INFO} ${YELLOW}–í–∞–∂–Ω–æ: –ù–æ–¥–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.${NC}"
    echo -e "${INFO} ${YELLOW}–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É:${NC}"
    echo -e "${CYAN}rivalz run${NC}"
    echo -e "${INFO} ${YELLOW}–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–∫–ª—é—á–∞—è EVM –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞.${NC}"
    show_separator
}

create_service_file() {
    show_header
    echo -e "${INSTALL} ${GREEN}–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–¥–æ–π...${NC}"
    show_separator

    RIVALZ_PATH=$(which rivalz)

    sudo bash -c "cat << EOF > /etc/systemd/system/rivalz.service
[Unit]
Description=Rivalz Node
After=network.target

[Service]
User=$(whoami)
Environment=PATH=/usr/local/bin:/usr/bin:/bin
ExecStart=$RIVALZ_PATH run
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF"
    sudo systemctl daemon-reload
    sudo systemctl enable rivalz
    echo -e "${SUCCESS} ${GREEN}–°–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.${NC}"
    echo -e "${INFO} ${YELLOW}–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –°–µ—Ä–≤–∏—Å –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.${NC}"
    echo -e "${INFO} ${YELLOW}–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:${NC}"
    echo -e "${CYAN}rivalz run${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã
show_node_status() {
    if is_node_installed; then
        if is_node_running; then
            echo -e "${CHECKMARK} ${GREEN}–°—Ç–∞—Ç—É—Å –Ω–æ–¥—ã: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
        else
            echo -e "${WARNING} ${YELLOW}–°—Ç–∞—Ç—É—Å –Ω–æ–¥—ã: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
        fi
    else
        echo -e "${ERROR} ${RED}–°—Ç–∞—Ç—É—Å –Ω–æ–¥—ã: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
show_system_info() {
    show_header
    echo -e "${INFO} ${CYAN}–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:${NC}"
    show_separator
    echo -e "${YELLOW}–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:${NC} $(uname -s)"
    echo -e "${YELLOW}–í–µ—Ä—Å–∏—è —è–¥—Ä–∞:${NC} $(uname -r)"
    echo -e "${YELLOW}–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:${NC} $(lscpu | grep 'Model name' | cut -f 2 -d ":")"
    echo -e "${YELLOW}–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:${NC} $(free -h | awk '/^Mem:/ {print $2}')"
    echo -e "${YELLOW}–°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:${NC} $(df -h / | awk '/\// {print $4}')"
    show_separator
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–¥—ã
remove_node() {
    echo -e "${WARNING} ${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Rivalz...${NC}"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
    sudo systemctl stop rivalz 2>/dev/null
    sudo systemctl disable rivalz 2>/dev/null
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    sudo rm /etc/systemd/system/rivalz.service 2>/dev/null
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –∏–∑ npm
    sudo npm uninstall -g rivalz-node-cli
    
    # –û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞
    npm cache clean --force
    
    echo -e "${SUCCESS} ${GREEN}–ù–æ–¥–∞ Rivalz —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.${NC}"
}

# –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–¥–æ–π
manage_node() {
    while true; do
        show_header
        echo -e "${NODE} ${YELLOW}–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–¥–æ–π:${NC}"
        show_separator
        echo "1. –°—Ç–∞—Ä—Ç –Ω–æ–¥—ã ${CHECKMARK}"
        echo "2. –°—Ç–æ–ø –Ω–æ–¥—ã ${ERROR}"
        echo "3. –†–µ—Å—Ç–∞—Ä—Ç –Ω–æ–¥—ã ${PROGRESS}"
        echo "4. –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ ${INFO}"
        echo "5. –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã ${ERROR}"
        echo "6. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è"
        show_separator
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-6): " option

        case $option in
            1)
                sudo systemctl start rivalz
                echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞.${NC}"
                ;;
            2)
                sudo systemctl stop rivalz
                echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
                ;;
            3)
                sudo systemctl restart rivalz
                echo -e "${PROGRESS} ${GREEN}–ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞.${NC}"
                ;;
            4)
                view_logs
                ;;
            5)
                remove_node
                ;;
            6)
                return
                ;;
            *)
                echo -e "${ERROR} ${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                ;;
        esac
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
    done
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–¥—ã
update_node() {
    show_header
    echo -e "${PROGRESS} ${YELLOW}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Rivalz...${NC}"
    show_separator

    if is_node_running; then
        echo -e "${INFO} ${BLUE}–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...${NC}"
        sudo systemctl stop rivalz
    fi

    echo -e "${INSTALL} ${YELLOW}–û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç rivalz-node-cli...${NC}"
    npm update -g rivalz-node-cli
    check_error

    echo -e "${PROGRESS} ${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É...${NC}"
    sudo systemctl start rivalz
    check_error

    echo -e "${SUCCESS} ${GREEN}–ù–æ–¥–∞ Rivalz —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!${NC}"
}

self_update() {
    # URL —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ GitHub
    REPO_URL="https://raw.githubusercontent.com/BananaAlliance/guides/main/rivalz/rivalz-wizzard.sh"

    # –ü–æ–ª—É—á–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∫—Ä–∏–ø—Ç–∞
    REMOTE_VERSION=$(curl -s $REPO_URL | grep -Eo 'SCRIPT_VERSION="[0-9]+\.[0-9]+\.[0-9]+"' | cut -d '"' -f 2)

    if [ -z "$REMOTE_VERSION" ]; then
        echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞.${NC}"
        return 1
    fi

    if [ "$SCRIPT_VERSION" != "$REMOTE_VERSION" ]; then
        echo -e "${WARNING} ${YELLOW}–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ ($REMOTE_VERSION). –û–±–Ω–æ–≤–ª—è–µ–º...${NC}"

        # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        TEMP_SCRIPT=$(mktemp)
        wget -O "$TEMP_SCRIPT" "$REPO_URL" || { echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.${NC}"; return 1; }

        # –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ –Ω–æ–≤—ã–π
        mv "$TEMP_SCRIPT" "$0" || { echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç.${NC}"; return 1; }
        chmod +x "$0"

        echo -e "${CHECKMARK} ${GREEN}–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ $REMOTE_VERSION.${NC}"

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        exec "$0" "$@"
    else
        echo -e "${CHECKMARK} ${GREEN}–£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ (${SCRIPT_VERSION}).${NC}"
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        show_header
        echo -e "${SUCCESS} ${GREEN}–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Å—Ç–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Rivalz!${NC}"
        show_separator
        show_node_status
        show_separator

        if is_node_installed; then
            if is_node_running; then
                echo "1. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–¥–æ–π ${NODE}"
                echo "2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ ${INFO}"
                echo "3. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É ${ERROR}"
                echo "4. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ ${INFO}"
                echo "5. –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É ${PROGRESS}"
                echo "6. –û–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç ${PROGRESS}"
            else
                echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É ${CHECKMARK}"
                echo "2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ ${INFO}"
                echo "3. –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É ${ERROR}"
                echo "4. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ ${INFO}"
                echo "5. –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É ${PROGRESS}"
                echo "6. –û–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç ${PROGRESS}"
            fi
        else
            echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É ${INSTALL}"
            echo "2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ ${INFO}"
            echo "3. –û–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç ${PROGRESS}"
        fi

        echo "0. –í—ã–π—Ç–∏ ${ERROR}"
        show_separator
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: " choice

        case $choice in
            1)
                if is_node_installed; then
                    if is_node_running; then
                        manage_node
                    else
                        echo -e "${PROGRESS} ${YELLOW}–ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É Rivalz...${NC}"
                        sudo systemctl start rivalz
                        sleep 2
                        if is_node_running; then
                            echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ Rivalz —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞.${NC}"
                        else
                            echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.${NC}"
                        fi
                    fi
                else
                    install_packages
                    install_rivalz
                    create_service_file
                fi
                ;;
            2)
                if is_node_installed; then
                    view_logs
                else
                    show_system_info
                fi
                ;;
            3)
                if is_node_installed; then
                    if is_node_running; then
                        sudo systemctl stop rivalz
                        echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
                    else
                        remove_node
                    fi
                else
                    self_update
                fi
                ;;
            4)
                show_system_info
                ;;
            5)
                if is_node_installed; then
                    update_node
                else
                    echo -e "${ERROR} ${RED}–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–¥—É.${NC}"
                fi
                ;;
            6)
                if is_node_installed; then
                    self_update
                else
                    echo -e "${ERROR} ${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                fi
                ;;
            0)
                show_header
                echo -e "${SUCCESS} ${GREEN}–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Rivalz!${NC}"
                exit 0
                ;;
            *)
                echo -e "${ERROR} ${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                ;;
        esac
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
    done
}

# –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
self_update

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu