#!/bin/bash

# –¶–≤–µ—Ç–∞ –∏ —ç–º–æ–¥–∑–∏
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

CHECKMARK="‚úÖ"
ERROR="‚ùå"
PROGRESS="‚è≥"
INSTALL="üì¶"
SUCCESS="üéâ"
WARNING="‚ö†Ô∏è"
NODE="üñ•Ô∏è"
INFO="‚ÑπÔ∏è"
SCRIPT_VERSION="1.1.0"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
show_header() {
    clear
    echo -e "${PURPLE}======================================${NC}"
    echo -e "${CYAN}       –ú–∞—Å—Ç–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Nesa${NC}"
    echo -e "${PURPLE}======================================${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
show_separator() {
    echo -e "${BLUE}--------------------------------------${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –Ω–æ–¥–∞
is_node_installed() {
    if docker ps -a --format '{{.Names}}' | grep -q "^orchestrator$"; then
        return 0
    else
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ –Ω–æ–¥–∞
is_node_running() {
    if docker ps --format '{{.Names}}' | grep -q "^orchestrator$" && docker ps --format '{{.Names}}' | grep -q "^ipfs_node$"; then
        return 0
    else
        return 1
    fi
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã
view_logs() {
    show_header
    echo -e "${NODE} ${GREEN}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã...${NC}"
    show_separator
    docker logs -f orchestrator
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
check_error() {
    if [ $? -ne 0 ]; then
        echo -e "${ERROR} ${RED}–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.${NC}"
        exit 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    show_header
    echo -e "${INSTALL} ${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    show_separator
    sudo apt update && sudo apt upgrade -y
    sudo apt install jq curl -y
    check_error
    echo -e "${INSTALL} ${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker...${NC}"
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update
    sudo apt-get install docker-ce docker-ce-cli containerd.io -y
    check_error
    echo -e "${INSTALL} ${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose...${NC}"
    VER=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d '"' -f 4)
    sudo curl -L "https://github.com/docker/compose/releases/download/$VER/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    check_error
    echo -e "${CHECKMARK} ${GREEN}–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${NC}"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Nesa
install_node() {
    show_header
    echo -e "${NODE} ${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Nesa...${NC}"
    show_separator
    
    # –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞
    echo -e "${INFO} ${YELLOW}–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ 31333...${NC}"
    sudo ufw allow 31333
    echo -e "${CHECKMARK} ${GREEN}–ü–æ—Ä—Ç 31333 –æ—Ç–∫—Ä—ã—Ç.${NC}"

    echo -e "${INFO} ${YELLOW}–°–µ–π—á–∞—Å –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.${NC}"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å..."
    bash <(curl -s https://raw.githubusercontent.com/nesaorg/bootstrap/master/bootstrap.sh)
    check_error
    echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ Nesa —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
}

# –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã
remove_node() {
    show_header
    echo -e "${NODE} ${RED}–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Nesa...${NC}"
    show_separator
    sudo docker stop orchestrator
    sudo docker stop ipfs_node
    sudo docker rm orchestrator
    sudo docker rm ipfs_node
    sudo docker images
    sudo docker rmi ghcr.io/nesaorg/orchestrator:devnet-latest
    sudo docker rmi ipfs/kubo:latest
    sudo docker image prune -a
    echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ Nesa —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.${NC}"
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã
restart_node() {
    show_header
    echo -e "${NODE} ${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã Nesa...${NC}"
    show_separator
    docker restart orchestrator mongodb docker-watchtower-1 ipfs_node
    echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ Nesa —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞.${NC}"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã
stop_node() {
    show_header
    echo -e "${NODE} ${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Nesa...${NC}"
    show_separator
    docker stop orchestrator mongodb docker-watchtower-1 ipfs_node
    echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ Nesa —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã
get_node_status() {
    if is_node_installed; then
        if is_node_running; then
            echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        else
            echo -e "${WARNING} ${YELLOW}–ù–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
        fi
    else
        echo -e "${INFO} ${BLUE}–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        show_header
        echo -e "${SUCCESS} ${GREEN}–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Å—Ç–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Nesa!${NC}"
        echo -e "${INFO} –í–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞: ${SCRIPT_VERSION}"
        show_separator
        get_node_status
        show_separator

        if is_node_installed; then
            if is_node_running; then
                echo "1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É ${ERROR}"
                echo "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É ${PROGRESS}"
            else
                echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É ${CHECKMARK}"
                echo "2. –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É ${ERROR}"
            fi
            echo "3. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ ${INFO}"
            echo "4. –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É ${PROGRESS}"
            echo "5. –í—ã–π—Ç–∏ ${ERROR}"
        else
            echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É ${INSTALL}"
            echo "2. –í—ã–π—Ç–∏ ${ERROR}"
        fi
        show_separator
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: " choice

        case $choice in
            1)
                if is_node_installed; then
                    if is_node_running; then
                        stop_node
                    else
                        restart_node
                    fi
                else
                    install_dependencies
                    install_node
                fi
                ;;
            2)
                if is_node_installed; then
                    if is_node_running; then
                        restart_node
                    else
                        remove_node
                    fi
                else
                    echo -e "${SUCCESS} ${GREEN}–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Nesa!${NC}"
                    exit 0
                fi
                ;;
            3)
                if is_node_installed; then
                    view_logs
                else
                    echo -e "${ERROR} ${RED}–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
                fi
                ;;
            4)
                if is_node_installed; then
                    echo -e "${PROGRESS} ${GREEN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Nesa...${NC}"
                    stop_node
                    remove_node
                    install_node
                    echo -e "${CHECKMARK} ${GREEN}–ù–æ–¥–∞ Nesa —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞.${NC}"
                else
                    echo -e "${ERROR} ${RED}–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
                fi
                ;;
            5)
                echo -e "${SUCCESS} ${GREEN}–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Nesa!${NC}"
                exit 0
                ;;
            *)
                echo -e "${ERROR} ${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                ;;
        esac
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
    done
}

# –§—É–Ω–∫—Ü–∏—è —Å–∞–º–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
self_update() {
    # URL —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ GitHub
    REPO_URL="https://raw.githubusercontent.com/BananaAlliance/guides/main/nesa/nesa-wizzard.sh"

    # –ü–æ–ª—É—á–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∫—Ä–∏–ø—Ç–∞
    REMOTE_VERSION=$(curl -s $REPO_URL | grep -Eo 'SCRIPT_VERSION="[0-9]+\.[0-9]+\.[0-9]+"' | cut -d '"' -f 2)

    if [ -z "$REMOTE_VERSION" ]; then
        echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞.${NC}"
        return 1
    fi

    if [ "$SCRIPT_VERSION" != "$REMOTE_VERSION" ]; then
        echo -e "${WARNING} ${YELLOW}–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ ($REMOTE_VERSION). –û–±–Ω–æ–≤–ª—è–µ–º...${NC}"

        # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        TEMP_SCRIPT=$(mktemp)
        wget -O "$TEMP_SCRIPT" "$REPO_URL" || { echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.${NC}"; return 1; }

        # –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ –Ω–æ–≤—ã–π
        mv "$TEMP_SCRIPT" "$0" || { echo -e "${ERROR} ${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç.${NC}"; return 1; }
        chmod +x "$0"

        echo -e "${CHECKMARK} ${GREEN}–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ $REMOTE_VERSION.${NC}"

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        exec "$0" "$@"
    else
        echo -e "${CHECKMARK} ${GREEN}–£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ (${SCRIPT_VERSION}).${NC}"
    fi
}

# –ó–∞–ø—É—Å–∫ —Å–∞–º–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
self_update

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu
